openapi: 3.0.0
info:
  title: Genuin Platform API
  description: API for interacting with brands, communities, groups, and videos.
  version: 1.0.0
servers:
  - url: http://localhost:3000
    description: Local server

tags:
  - name: Admin
    description: Admin-related operations
  - name: User
    description: User-related operations
  - name: Caching
    description: Cached data retrieval

paths:
  /auth/login:
    post:
      tags:
        - Admin
        - User
      summary: Login for admin or user
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                email:
                  type: string
                  example: admin@example.com
                password:
                  type: string
                  example: password123
      responses:
        '200':
          description: Successful login
          content:
            application/json:
              schema:
                type: object
                properties:
                  token:
                    type: string
                    example: eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9...

  /brands:
    post:
      tags:
        - Admin
      summary: Create a new brand
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                name:
                  type: string
                  example: New Brand
                websiteUrl:
                  type: string
                  example: http://newbrand.com
                primaryColor:
                  type: string
                  example: "#FFFFFF"
                secondaryColor:
                  type: string
                  example: "#000000"
                thumbnailUrl:
                  type: string
                  example: http://newbrand.com/thumbnail.jpg
      responses:
        '201':
          description: Brand created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  name:
                    type: string
                    example: New Brand

    get:
      tags:
        - Admin
      summary: Get all brands
      security:
        - bearerAuth: []
      responses:
        '200':
          description: List of brands
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Brand 1

  /brands/{id}:
    delete:
      tags:
        - Admin
      summary: Delete a brand
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          required: true
          schema:
            type: integer
            example: 1
      responses:
        '200':
          description: Brand deleted successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: Brand deleted successfully

  /videos:
    post:
      tags:
        - User
      summary: Create a new video
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                groupId:
                  type: integer
                  example: 1
                title:
                  type: string
                  example: New Video
                description:
                  type: string
                  example: This is a new video.
      responses:
        '201':
          description: Video created successfully
          content:
            application/json:
              schema:
                type: object
                properties:
                  id:
                    type: integer
                    example: 1
                  title:
                    type: string
                    example: New Video

  /videos/recent:
    get:
      tags:
        - Caching
      summary: Get recent videos
      responses:
        '200':
          description: List of recent videos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: Recent Video

  /videos/highlights:
    get:
      tags:
        - Caching
      summary: Get most discussed videos
      responses:
        '200':
          description: Most discussed videos
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    title:
                      type: string
                      example: Highlighted Video

  /communities/join:
    post:
      tags:
        - User
      summary: Join a community
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              properties:
                username:
                  type: string
                  example: regularUser
                communityId:
                  type: integer
                  example: 1
      responses:
        '200':
          description: User joined the community
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: User successfully joined the community

  /brands/videos/top:
    get:
      tags:
        - Caching
      summary: Get top brands by video views
      responses:
        '200':
          description: List of top brands
          content:
            application/json:
              schema:
                type: array
                items:
                  type: object
                  properties:
                    id:
                      type: integer
                      example: 1
                    name:
                      type: string
                      example: Top Brand

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
